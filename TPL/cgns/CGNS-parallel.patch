From ea0d84f86de77208a4995331e3eacb35f8c923a1 Mon Sep 17 00:00:00 2001
From: Greg Sjaardema <gsjaardema@gmail.com>
Date: Mon, 4 Feb 2019 10:11:09 -0700
Subject: [PATCH] Modifications to CGNS develop for Sandia use

* Proof-of-concept for allowing file-per-processor and single-file parallel output
---
 src/cgns_io.c   | 48 ++++++++++++++++++++++++++++++++++++++++++++----
 2 files changed, 50 insertions(+), 6 deletions(-)

diff --git a/src/cgns_io.c b/src/cgns_io.c
index b787ef6..73da785 100644
--- a/src/cgns_io.c
+++ b/src/cgns_io.c
@@ -48,12 +48,12 @@ char hdf5_access[64] = "NATIVE";
 #ifdef MEM_DEBUG
 #include "cg_malloc.h"
 #endif
+int pcg_mpi_initialized;
 #ifdef BUILD_PARALLEL
 #include <mpi.h>
 MPI_Comm pcg_mpi_comm=MPI_COMM_WORLD;
 int pcg_mpi_comm_size;
 int pcg_mpi_comm_rank;
-int pcg_mpi_initialized;
 MPI_Info pcg_mpi_info;
 #endif
 
@@ -69,6 +69,7 @@ MPI_Info pcg_mpi_info;
 typedef struct {
     int type;
     int mode;
+    int mpi_initialized;
     double rootid;
 } cgns_io;
 
@@ -587,7 +588,7 @@ int cgio_check_file (const char *filename, int *file_type)
 
 #ifdef BUILD_PARALLEL
     /* don't overload the file system by having all the processors doing a read */
-    if(pcg_mpi_comm_rank == 0) {
+    if(!pcg_mpi_initialized || pcg_mpi_comm_rank == 0) {
 #endif
 
       fp = fopen(filename, "rb");
@@ -803,6 +804,11 @@ int cgio_open_file (const char *filename, int file_mode,
     }
     iolist[n].type = file_type;
     iolist[n].mode = file_mode;
+#ifdef BUILD_PARALLEL
+    iolist[n].mpi_initialized = pcg_mpi_initialized;
+#else
+    iolist[n].mpi_initialized = 0;
+#endif
     iolist[n].rootid = rootid;
     *cgio_num = n + 1;
     num_open++;
@@ -814,8 +820,8 @@ int cgio_open_file (const char *filename, int file_mode,
 
 int cgio_close_file (int cgio_num)
 {
-    int ierr;
-    cgns_io *cgio;
+    int ierr = 0;
+    cgns_io *cgio = NULL;
 
     if ((cgio = get_cgnsio(cgio_num, 0)) == NULL)
         return get_error();
@@ -826,6 +832,7 @@ int cgio_close_file (int cgio_num)
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Database_Close(cgio->rootid, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -911,6 +918,7 @@ int cgio_flush_to_disk (int cgio_num)
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Flush_to_Disk(cgio->rootid, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -940,6 +948,7 @@ int cgio_library_version (int cgio_num, char *version)
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Library_Version(version, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -969,6 +978,7 @@ int cgio_file_version (int cgio_num, char *file_version,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Database_Version(cgio->rootid, file_version,
             creation_date, modified_date, &ierr);
         if (ierr > 0) return set_error(ierr);
@@ -1091,6 +1101,7 @@ int cgio_create_node (int cgio_num, double pid,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Create(pid, name, id, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -1130,6 +1141,7 @@ int cgio_new_node (int cgio_num, double pid, const char *name,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Create(pid, name, id, &ierr);
         if (ierr > 0) return set_error(ierr);
         ADFH_Set_Label(*id, label, &ierr);
@@ -1167,6 +1179,7 @@ int cgio_delete_node (int cgio_num, double pid, double id)
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Delete(pid, id, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -1195,6 +1208,7 @@ int cgio_move_node (int cgio_num, double pid, double id,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Move_Child(pid, id, new_pid, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -1321,6 +1335,7 @@ int cgio_release_id (int cgio_num, double id)
     if ((cgio = get_cgnsio(cgio_num, 0)) == NULL)
         return get_error();
     if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Release_ID(id);
     }
 #endif
@@ -1346,6 +1361,7 @@ int cgio_is_link (int cgio_num, double id, int *link_len)
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Is_Link(id, link_len, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -1374,6 +1390,7 @@ int cgio_link_size (int cgio_num, double id, int *file_len,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Link_Size(id, file_len, name_len, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -1402,6 +1419,7 @@ int cgio_create_link (int cgio_num, double pid, const char *name,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Link(pid, name, filename, name_in_file, id, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -1430,6 +1448,7 @@ int cgio_get_link (int cgio_num, double id,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Get_Link_Path(id, filename, name_in_file, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -1460,6 +1479,7 @@ int cgio_number_children (int cgio_num, double id,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Number_of_Children(id, num_children, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -1488,6 +1508,7 @@ int cgio_children_ids (int cgio_num, double pid,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Children_IDs(pid, start, max_ret, num_ret, ids, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -1517,6 +1538,7 @@ int cgio_children_names (int cgio_num, double pid, int start, int max_ret,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Children_Names(pid, start, max_ret, name_len,
             num_ret, names, &ierr);
         if (ierr > 0) return set_error(ierr);
@@ -1548,6 +1570,7 @@ int cgio_get_node_id (int cgio_num, double pid,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Get_Node_ID(pid, name, id, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -1575,6 +1598,7 @@ int cgio_get_name (int cgio_num, double id, char *name)
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Get_Name(id, name, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -1602,6 +1626,7 @@ int cgio_get_label (int cgio_num, double id, char *label)
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Get_Label(id, label, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -1629,6 +1654,7 @@ int cgio_get_data_type (int cgio_num, double id, char *data_type)
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Get_Data_Type(id, data_type, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -1678,6 +1704,7 @@ int cgio_get_dimensions (int cgio_num, double id,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Get_Number_of_Dimensions(id, num_dims, &ierr);
         if (NULL != dims && ierr <= 0 && *num_dims > 0) {
             ADFH_Get_Dimension_Values(id, dims, &ierr);
@@ -1708,6 +1735,7 @@ int cgio_read_all_data (int cgio_num, double id, void *data)
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Read_All_Data(id, NULL, (char *)data, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -1737,6 +1765,7 @@ int cgio_read_all_data_type (int cgio_num, double id, const char *m_data_type,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Read_All_Data(id, m_data_type, (char *)data, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -1765,6 +1794,7 @@ int cgio_read_block_data (int cgio_num, double id,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Read_Block_Data(id, b_start, b_end, (char *)data, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -1797,6 +1827,7 @@ int cgio_read_data (int cgio_num, double id,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Read_Data(id, s_start, s_end, s_stride, NULL, m_num_dims,
             m_dims, m_start, m_end, m_stride, (char *)data, &ierr);
         if (ierr > 0) return set_error(ierr);
@@ -1830,6 +1861,7 @@ int cgio_read_data_type (int cgio_num, double id,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Read_Data(id, s_start, s_end, s_stride, m_data_type, m_num_dims,
             m_dims, m_start, m_end, m_stride, (char *)data, &ierr);
         if (ierr > 0) return set_error(ierr);
@@ -1861,6 +1893,7 @@ int cgio_set_name (int cgio_num, double pid, double id,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Put_Name(pid, id, name, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -1888,6 +1921,7 @@ int cgio_set_label (int cgio_num, double id, const char *label)
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Set_Label(id, label, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -1916,6 +1950,7 @@ int cgio_set_dimensions (int cgio_num, double id,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Put_Dimension_Information(id, data_type, num_dims, dims, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -1944,6 +1979,7 @@ int cgio_write_all_data (int cgio_num, double id,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Write_All_Data(id, NULL, (const char *)data, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -1973,6 +2009,7 @@ int cgio_write_all_data_type (int cgio_num, double id, const char *m_data_type,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Write_All_Data(id, m_data_type, (const char *)data, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -2001,6 +2038,7 @@ int cgio_write_block_data (int cgio_num, double id,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Write_Block_Data(id, b_start, b_end, (char *)data, &ierr);
         if (ierr > 0) return set_error(ierr);
     }
@@ -2033,6 +2071,7 @@ int cgio_write_data (int cgio_num, double id,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Write_Data(id, s_start, s_end, s_stride, NULL, m_num_dims,
             m_dims, m_start, m_end, m_stride, (const char *)data, &ierr);
         if (ierr > 0) return set_error(ierr);
@@ -2066,6 +2105,7 @@ int cgio_write_data_type (int cgio_num, double id,
     }
 #ifdef BUILD_HDF5
     else if (cgio->type == CGIO_FILE_HDF5) {
+        pcg_mpi_initialized = cgio->mpi_initialized;
         ADFH_Write_Data(id, s_start, s_end, s_stride, m_data_type, m_num_dims,
             m_dims, m_start, m_end, m_stride, (const char *)data, &ierr);
         if (ierr > 0) return set_error(ierr);
-- 
2.20.1

